
!-- use this property to set the relevant enviroment properties file 
!--value =dev for application-dev.properties and 
!--value=openshift for application-openshift.properties
!--spring.profiles.active=dev



logging.level.org.springframework.web = ${LOGGING_LEVEL_WEB}
logging.level.root=${LOGGING_LEVEL_ROOT}

!-- set to false if not to use custom error controller
server.error.whitelabel.enabled=false
server.error.path=/error

#spring.profiles.active=openshift
greeter.message=${LOGGING_LEVEL_WEB}
!-- use for local ,this will run tomcat on this port s
!--server.port=8088

## Spring view resolver set up RB=27-june for view
spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=none
!--spring.jpa.hibernate.show-sql=true

## by prasanna to handle the Camel type naming ProductMaster  to product_master
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.properties.hibernate.generate_statistics=false



!-- using environment variable
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}


# spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
 #spring.datasource.username=postgres
# spring.datasource.password=postgres

!-- using in open shit container
!-- Postre:5432 where postgre is the service name & healthresoucrcesmgmtdb is dbname
!--spring.datasource.url=jdbc:postgresql://postgres:5432/healthmgmtdb

!--Username: root
!--Password: root
!--Database Name: healthmgmtdb running on openshift
!--Connection URL: postgresql://postgres:5432/
!--spring.datasource.username=root
!--spring.datasource.password=root
!--spring.datasource.initialization-mode=always


!-- using environment variable
!--spring.datasource.url=jdbc:mysql://${MYSQL_HOST}:${MYSQL_PORT}/movies
!--	spring.datasource.username=${MYSQL_USER}
!--	spring.datasource.password=${MYSQL_PASSWORD}
	
spring.datasource.initialize=true
!--spring.datasource.schema=classpath:/schema.sql
spring.datasource.continue-on-error=true

!--

!--Set java Environment variable in Centos / Linux

!--/home/ vi .bashrc

!--export JAVA_HOME=/opt/oracle/product/java/jdk1.8.0_45

!--export PATH=$JAVA_HOME/bin:$PATH

!--java -version

